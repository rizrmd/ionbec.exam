networks:
    frontend:
        driver: ${DOCKER_NETWORKS_DRIVER}
    backend:
        driver: ${DOCKER_NETWORKS_DRIVER}

services:
    gateway:
        image: nginx:1.25.2
        restart: unless-stopped
        volumes:
            - ./docker/matter/gateway:/etc/nginx/conf.d
        ports:
            - ${DOCKER_PORT}:80
        networks:
            - frontend
            - backend
        depends_on:
            - octane
            - soketi
    octane:
        build:
            context: docker/image
            args:
                - USER_CONTAINER=${DOCKER_USER}
                - PUID=${DOCKER_PUID}
                - PGID=${DOCKER_PGID}
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        restart: unless-stopped
        depends_on:
            - db
            - redis
        volumes:
            # laravel comes up with public dir inside workdir, so we will mount only /var/www
            - ./:/var/www
        environment:
            DOCKER_ENV: ${APP_ENV}
        networks:
            - backend
        working_dir: /var/www
    db:
        image: mysql/mysql-server:8.0.32
        volumes:
            - ${DOCKER_DATA_PATH_HOST}/mysql:/var/lib/mysql
        restart: unless-stopped
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        networks:
            - backend
        ports:
            - ":3306"
    redis:
        image: redis:7.2.0
        restart: unless-stopped
        volumes:
            - ${DOCKER_DATA_PATH_HOST}/redis:/data
        networks:
            - backend
    horizon:
        image: ghcr.io/digital-entropy/dokar-php/cli:8.1
        restart: unless-stopped
        depends_on:
            - db
            - redis
        volumes:
            - ./:/var/www
            - ./docker/matter/horizon/:/entrypoint.d
        networks:
            - backend
        environment:
            - USER=${DOCKER_USER}
            - PUID=${DOCKER_PUID}
            - PGID=${DOCKER_PGID}
        working_dir: /var/www
        entrypoint: [ /entrypoint.d/entrypoint.sh ]
    scheduler:
        image: ghcr.io/digital-entropy/dokar-php/cli:8.1
        restart: unless-stopped
        depends_on:
            - db
            - redis
        volumes:
            - ./:/var/www
            - ./docker/matter/scheduler/:/entrypoint.d
        networks:
            - backend
        environment:
            - USER=${DOCKER_USER}
            - PUID=${DOCKER_PUID}
            - PGID=${DOCKER_PGID}
        working_dir: /var/www
        entrypoint: [ /entrypoint.d/entrypoint.sh ]
    soketi:
        image: quay.io/soketi/soketi:latest-16-alpine
        restart: unless-stopped
        ports:
            - 6001
        logging:
            options:
                max-size: "10m"
        environment:
            - DEBUG=${APP_DEBUG}
            - METRICS_SERVER_PORT='9601'
            - SOKETI_DB_REDIS_HOST=redis
            - SOKETI_DB_REDIS_PORT=6379
            - SOKETI_DB_REDIS_KEY_PREFIX=soketi
            - SOKETI_DEFAULT_APP_ID=${PUSHER_APP_ID}
            - SOKETI_DEFAULT_APP_KEY=${PUSHER_APP_KEY}
            - SOKETI_DEFAULT_APP_SECRET=${PUSHER_APP_SECRET}
        networks:
            - backend
