name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  php-cs-fixer:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Run php-cs-fixer
        uses: docker://oskarstark/php-cs-fixer-ga
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: 'digitalentropybot'
          commit_user_email: 'dev@digitalentropy.co.id'
          commit_message: "bot: cs fix"
  test:
    runs-on: ubuntu-20.04
    needs: [php-cs-fixer]
    strategy:
      matrix:
        php: [ 8.1 ]
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_USER: dev
          MYSQL_PASSWORD: strongPasswordUsingSpace
          MYSQL_ROOT_PASSWORD: strongPasswordUsingSpace
          MYSQL_DATABASE: ionbec_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: xdebug
      - name: Install dependencies
        run: composer install -q --no-interaction
      - name: Generate key
        run: php artisan key:generate --env=testing
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build
        run: yarn run production
      - name: Run Test
        env:
          DB_CONNECTION: mysql
          DB_USERNAME: root
          DB_PASSWORD: strongPasswordUsingSpace
          DB_DATABASE: ionbec_test
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
        run: php artisan test --parallel --recreate-databases --env=testing
        # update to codecov when ready..
#      - name: Upload to CodeCov.io
#        uses: codecov/codecov-action@v1
#        with:
#          token: ${{ secrets.CDCV_KEY }}
#          file: ./coverage.xml
